head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2009.02.19.20.18.53;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.11.12.49.54;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.21.12.25.33;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.12.13.25.21;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2008.04.12.23.42.34;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.28.04.24.14;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.28.04.22.01;	author root;	state Exp;
branches;
next	;


desc
@committing to rcs.
@


1.7
log
@updated mail/cleanup if/fi, added date to subj.
@
text
@#!/bin/bash
#
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.6 2008/08/11 12:49:54 root Exp root $
#
# gentoo.peroidic - run scripts in given dirs. this is 
# designed to run out of crontab. 

# base directory where gentoo.periodic is installed
BASE_DIR="/usr/local/sbin/gentoo.periodic"
DST_EML="omega-prime@@aci.on.ca"
NOW=$(date +%F)
# temp file to output to, exported to the shell
TMP_FILE="/tmp/$$.perioidic.tmp"
export TMP_FILE

# simple usage statement
output_usage() {
	echo " Usage: generate-reports [global-option]"
	echo " Global Options:"
	echo "   -c: run script"
	echo "   -d: daily"
	echo "   -w: weekly"
	echo "   -m: monthly"
	echo "   -y: yearly"
	echo "   -s: security"
	echo "   -h: this help message"
}

# this actually executes the script module 
run_script() {
	for script in `ls -1 $BASE_DIR/$PERIOD | sort -n`; do
		sh $BASE_DIR/$PERIOD/$script >> $TMP_FILE
	done
}

# option list and script runner handling. 
while getopts c:dmwysh OPT; do
	case "$OPT" in 
		c)	# run script manually 	
			SCRIPT="$OPTARG"
			sh -x $SCRIPT 
			;;
		d)	# daily
			PERIOD="daily"
			run_script
			;;
		w)	# weekly
			PERIOD="weekly"
			run_script
			;;
		m)	# monthly
			PERIOD="monthly"
			run_script
			;;
		y)	# yearly
			PERIOD="yearly"
			run_script
			;;
		s) 	# security
			PERIOD="security"
			run_script
			;;
		h)	# help
			output_usage
			;;
		*)	# everything else
			output_usage
			;;
	esac
done

# mailout and housekeeping.
HOST=`hostname | tr [:lower:] [:upper:]`
if [[ -e $TMP_FILE ]]; then 
	mail -s "$HOST: $PERIOD report for $NOW" $DST_EML < $TMP_FILE
	rm -f $TMP_FILE
fi 
@


1.6
log
@adjusted email address.
@
text
@d3 1
a3 1
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.5 2008/05/21 12:25:33 root Exp root $
d11 1
d36 1
d72 1
d75 2
a76 1
	mail -s "$HOST: $PERIOD report" $DST_EML < $TMP_FILE
a77 4

#if [[ -e $TMP_FILE ]]; then 
#	rm $TMP_FILE
#fi
@


1.5
log
@forgot semi-colon inside case.
@
text
@d3 1
a3 1
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.4 2008/05/12 13:25:21 root Exp root $
d10 1
a10 1
DST_EML="drewl@@aci.on.ca"
@


1.4
log
@updated with way to manually activate script.
@
text
@d3 1
a3 1
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.3 2008/04/12 23:42:34 root Exp root $
d29 1
a29 1
run_script () {
d40 1
@


1.3
log
@updates and bugfixes.
@
text
@d3 1
a3 1
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.2 2008/03/28 04:24:14 root Exp root $
d19 1
d35 1
a35 1
while getopts dmwysh OPT; do
d37 3
@


1.2
log
@put numeric sort into loop for run_script.
@
text
@d3 1
a3 1
# $Header: /usr/local/sbin/gentoo.periodic/RCS/gentoo.periodic.sh,v 1.1 2008/03/28 04:22:01 root Exp root $
d28 1
a28 1
run_script() {
d42 1
d66 3
a68 1
mail -s "$HOST: $PERIOD report" $DST_EML < $TMP_FILE
d70 3
a72 3
if [[ -e $TMP_FILE ]]; then 
	rm $TMP_FILE
fi
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $Header$
d29 1
a29 1
	for script in `ls -1 $BASE_DIR/$PERIOD`; do
@
